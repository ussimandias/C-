Creating Constructor Methods
****************************

Constructors are called at the moment of instantiation.
Used to put the new instance of the class into a valid state.
	Public Class Foo
	{
		public Foo()
		{
		.....
		}
	}

Whether you define it or not, there 's a default constructor.
You can override the default(no input parameters) or overload the 
constructor to allow the user to set the new instance to a valid state.

Naming Conventions for Identifiers
*************************************
PascalCase - public
camelCase - private, protected

Public classes, methods and properties - PascalCase
Private helper methods, input parameters - camelCase
Locally scoped variables - camelCase
Private fiels- camelCase prefixed w/ underscore: _firstName

choose long, memorable, understandable names that convey meaning/intent.

Satic versus Instance Members
*****************************
Static members - no instance of the class required to call method

Instance member - must create an instance w/ new keyword to call method
and properties

Can mix both in the same class, but you can't reference instance members from 
inside of static members.

Classes can be decorated w/ static keyword ... all members must be static, 
can't create a new instance of the class

System.Math

http://v.gd/static